package ru.netology

/***
 *
 * id integer	Идентификатор записи.
 *
owner_id integer	Идентификатор владельца стены, на которой размещена запись.
В версиях API ниже 5.7 это поле называется to_id.

from_id integer	Идентификатор автора записи (от чьего имени опубликована запись).

created_by integer	Идентификатор администратора, который опубликовал запись
(возвращается только для сообществ при запросе с ключом доступа администратора).
Возвращается в записях, опубликованных менее 24 часов назад.

date integer	Время публикации записи в формате unixtime.

text string	Текст записи.

reply_owner_id integer	Идентификатор владельца записи, в ответ на которую была оставлена текущая.

reply_post_id integer	Идентификатор записи, в ответ на которую была оставлена текущая.

friends_only integer, [1]	1, если запись была создана с опцией «Только для друзей».

comments object	Информация о комментариях к записи, объект с полями:
count (integer) — количество комментариев;
can_post* (integer, [0,1]) — информация о том, может ли текущий пользователь комментировать запись (1 — может, 0 — не может);
groups_can_post (integer, [0,1]) — информация о том, могут ли сообщества комментировать запись;
can_close(boolean) — может ли текущий пользователь закрыть комментарии к записи;
can_open(boolean) — может ли текущий пользователь открыть комментарии к записи.

copyright object	Источник материала, объект с полями:
id (integer);
link* (string);
name* (string);
type* (string).

likes object	Информация о лайках к записи, объект с полями:
count (integer) — число пользователей, которым понравилась запись;
user_likes* (integer, [0,1]) — наличие отметки «Мне нравится» от текущего пользователя (1 — есть, 0 — нет);
can_like* (integer, [0,1]) — информация о том, может ли текущий пользователь поставить отметку «Мне нравится» (1 — может, 0 — не может);
can_publish* (integer, [0,1]) — информация о том, может ли текущий пользователь сделать репост записи (1 — может, 0 — не может).

reposts object	Информация о репостах записи («Рассказать друзьям»), объект с полями:
count (integer) — число пользователей, скопировавших запись;
user_reposted* (integer, [0,1]) — наличие репоста от текущего пользователя (1 — есть, 0 — нет).

views object	Информация о просмотрах записи. Объект с единственным полем:
count (integer) — число просмотров записи.

post_type string	Тип записи, может принимать следующие значения: post, copy, reply, postpone, suggest.

post_source object Поле возвращается только для Standalone-приложений с ключом доступа,
полученным в Implicit Flow.	Информация о способе размещения записи. Описание объекта находится на отдельной странице.

attachments array	Медиавложения записи (фотографии, ссылки и т.п.).
Описание массива attachments находится на отдельной странице.

geo object	Информация о местоположении, содержит поля:
type (string) — тип места;
coordinates (string) — координаты места;
place (object) — описание места (если оно добавлено). Объект места.
signer_id integer	Идентификатор автора, если запись была опубликована от имени сообщества и подписана пользователем;
copy_history
array	Массив, содержащий историю репостов для записи. Возвращается только в том случае, если запись является репостом.
Каждый из объектов массива, в свою очередь, является объектом-записью стандартного формата.

can_pin integer, [0,1]	Информация о том, может ли текущий пользователь закрепить запись (1 — может, 0 — не может).
can_delete integer, [0,1]	Информация о том, может ли текущий пользователь удалить запись (1 — может, 0 — не может).
can_edit integer, [0,1]	Информация о том, может ли текущий пользователь редактировать запись (1 — может, 0 — не может).
is_pinned integer, [1]	Информация о том, что запись закреплена.
marked_as_ads integer, [0,1]	Информация о том, содержит ли запись отметку "реклама" (1 — да, 0 — нет).
is_favorite boolean	true, если объект добавлен в закладки у текущего пользователя.

donut object	Информация о записи VK Donut:
is_donut (boolean) — запись доступна только платным подписчикам VK Donut;
paid_duration (integer) — время, в течение которого запись будет доступна только платным подписчикам VK Donut;
placeholder (object) — заглушка для пользователей, которые не оформили подписку VK Donut. Отображается вместо содержимого записи.
can_publish_free_copy (boolean) — можно ли открыть запись для всех пользователей, а не только подписчиков VK Donut;
edit_mode (string) — информация о том, какие значения VK Donut можно изменить в записи. Возможные значения:
all — всю информацию о VK Donut.
duration — время, в течение которого запись будет доступна только платным подписчикам VK Donut.
postponed_id integer	Идентификатор отложенной записи. Это поле возвращается тогда, когда запись стояла на таймере.
 *
 *
 */

data class Post (
    val id: Int,
    val ownerId: Int,
    val fromId: Int,
    val createdBy: Int,
    val date: Int,
    val text: String,
    val replyOwnerId: Int,
    val replyPostId: Int,
    val friendsOnly: Boolean,
    val comments: Comments,
    val copyright: Copyright,
    val likes: Likes,
    val reposts: Reposts,
    val views: Views,
    val postType: String,
    val canPin: Boolean,
    val canDelete: Boolean,
    val canEdit: Boolean,
    val isPinned: Boolean,
    val markedAsAds: Boolean,
    val isFavorite: Boolean,
    val donut: Donut
)
{
    override fun equals(other: Any?): Boolean {
        if (other == null || other !is Post)
            return false
        return id == other.id && ownerId == other.ownerId
    }

}

//can_pin integer, [0,1]	Информация о том, может ли текущий пользователь закрепить запись (1 — может, 0 — не может).
//can_delete integer, [0,1]	Информация о том, может ли текущий пользователь удалить запись (1 — может, 0 — не может).
//can_edit integer, [0,1]	Информация о том, может ли текущий пользователь редактировать запись (1 — может, 0 — не может).
//is_pinned integer, [1]	Информация о том, что запись закреплена.
//marked_as_ads integer, [0,1]	Информация о том, содержит ли запись отметку "реклама" (1 — да, 0 — нет).
//is_favorite boolean	true, если объект добавлен в закладки у текущего пользователя.

class Comments () {}
//comments object	Информация о комментариях к записи, объект с полями:
//count (integer) — количество комментариев;
//can_post* (integer, [0,1]) — информация о том, может ли текущий пользователь комментировать запись (1 — может, 0 — не может);
//groups_can_post (integer, [0,1]) — информация о том, могут ли сообщества комментировать запись;
//can_close(boolean) — может ли текущий пользователь закрыть комментарии к записи;
//can_open(boolean) — может ли текущий пользователь открыть комментарии к записи.

class Copyright () {}
//copyright object	Источник материала, объект с полями:
//id (integer);
//link* (string);
//name* (string);
//type* (string).
//

class Likes () {}
//likes object	Информация о лайках к записи, объект с полями:
//count (integer) — число пользователей, которым понравилась запись;
//user_likes* (integer, [0,1]) — наличие отметки «Мне нравится» от текущего пользователя (1 — есть, 0 — нет);
//can_like* (integer, [0,1]) — информация о том, может ли текущий пользователь поставить отметку «Мне нравится» (1 — может, 0 — не может);
//can_publish* (integer, [0,1]) — информация о том, может ли текущий пользователь сделать репост записи
// (1 — может, 0 — не может).

class Reposts () {}
//reposts object	Информация о репостах записи («Рассказать друзьям»), объект с полями:
//count (integer) — число пользователей, скопировавших запись;
//user_reposted* (integer, [0,1]) — наличие репоста от текущего пользователя (1 — есть, 0 — нет).
//

class Views () {}
//views object	Информация о просмотрах записи. Объект с единственным полем:
//count (integer) — число просмотров записи.
//
//post_type string	Тип записи, может принимать следующие значения: post, copy, reply, postpone, suggest.

class Donut () {}
//donut object	Информация о записи VK Donut:
//is_donut (boolean) — запись доступна только платным подписчикам VK Donut;
//paid_duration (integer) — время, в течение которого запись будет доступна только платным подписчикам VK Donut;
//placeholder (object) — заглушка для пользователей, которые не оформили подписку VK Donut. Отображается вместо содержимого записи.
//can_publish_free_copy (boolean) — можно ли открыть запись для всех пользователей, а не только подписчиков VK Donut;
//edit_mode (string) — информация о том, какие значения VK Donut можно изменить в записи. Возможные значения:
//all — всю информацию о VK Donut.
//duration — время, в течение которого запись будет доступна только платным подписчикам VK Donut.
//postponed_id integer	Идентификатор отложенной записи. Это поле возвращается тогда, когда запись стояла на таймере.
